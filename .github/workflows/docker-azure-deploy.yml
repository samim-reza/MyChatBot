name: Build and Deploy Docker to Azure via Docker Hub

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  DOCKER_IMAGE_NAME: samim-chatbot
  AZURE_WEBAPP_NAME: samim
  AZURE_RESOURCE_GROUP: mychatbot

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: üîÑ Checkout code
      uses: actions/checkout@v4
      
    - name: üê≥ Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: üîê Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: üèóÔ∏è Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: üß™ Test Docker image
      run: |
        docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
        docker run -d --name test-container -p 8000:8000 \
          -e GROQ_API_KEY="${{ secrets.GROQ_API_KEY }}" \
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
        
        # Wait for container to start
        sleep 15
        
        # Check health endpoint
        curl -f http://localhost:8000/health || exit 1
        
        # Stop test container
        docker stop test-container
        docker rm test-container
    
    - name: üîê Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: üöÄ Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
    
    - name: ‚öôÔ∏è Configure Web App Settings
      run: |
        az webapp config appsettings set \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --settings GROQ_API_KEY="${{ secrets.GROQ_API_KEY }}" WEBSITES_PORT=8000
    
    - name: ‚úÖ Deployment complete
      run: |
        echo "üéâ Deployment successful!"
        echo "üåê Application URL: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
        echo "üê≥ Docker Image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}"
