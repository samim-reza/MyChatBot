name: Build and Deploy Docker to Azure

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  DOCKER_IMAGE_NAME: samim-chatbot
  AZURE_WEBAPP_NAME: samim  # Replace with your Azure Web App name

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: üîÑ Checkout code
      uses: actions/checkout@v4
      
    - name: üê≥ Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: üîê Log in to Docker Hub (Optional - for caching)
      if: ${{ secrets.DOCKERHUB_USERNAME != '' }}
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: üèóÔ∏è Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: false
        load: true
        tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }},${{ env.DOCKER_IMAGE_NAME }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: üß™ Test Docker image
      run: |
        docker run -d --name test-container -p 8000:8000 \
          -e GROQ_API_KEY="${{ secrets.GROQ_API_KEY }}" \
          ${{ env.DOCKER_IMAGE_NAME }}:latest
        
        # Wait for container to start
        sleep 10
        
        # Check health endpoint
        curl -f http://localhost:8000/health || exit 1
        
        # Stop test container
        docker stop test-container
        docker rm test-container
    
    - name: üîê Log in to Azure Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
        password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}
    
    - name: üè∑Ô∏è Tag and push to Azure Container Registry
      run: |
        docker tag ${{ env.DOCKER_IMAGE_NAME }}:latest \
          ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
        docker tag ${{ env.DOCKER_IMAGE_NAME }}:latest \
          ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/${{ env.DOCKER_IMAGE_NAME }}:latest
        
        docker push ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/${{ env.DOCKER_IMAGE_NAME }}:latest
    
    - name: üöÄ Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        images: ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
    
    - name: ‚úÖ Deployment complete
      run: |
        echo "üéâ Deployment successful!"
        echo "üåê Application URL: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
